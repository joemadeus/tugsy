# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sensordata.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sensordata.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x10sensordata.proto\"2\n\x0eSensorReadings\x12 \n\x08readings\x18\x01 \x03(\x0b\x32\x0e.SensorReading\"h\n\rSensorReading\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08location\x18\x02 \x01(\t\x12\x10\n\x08recorded\x18\x03 \x01(\x03\x12\x10\n\x08received\x18\x04 \x01(\x03\x12\x13\n\x04\x64\x61ta\x18\x05 \x03(\x0b\x32\x05.Data\"W\n\x04\x44\x61ta\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x16\n\x0cstring_value\x18\x02 \x01(\tH\x00\x12\x16\n\x0c\x64ouble_value\x18\x03 \x01(\x01H\x00\x42\x12\n\x10string_or_doubleB\x06Z\x04mainb\x06proto3')
)




_SENSORREADINGS = _descriptor.Descriptor(
  name='SensorReadings',
  full_name='SensorReadings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='readings', full_name='SensorReadings.readings', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=70,
)


_SENSORREADING = _descriptor.Descriptor(
  name='SensorReading',
  full_name='SensorReading',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='SensorReading.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='SensorReading.location', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recorded', full_name='SensorReading.recorded', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='received', full_name='SensorReading.received', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='SensorReading.data', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=176,
)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Data.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='Data.string_value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='double_value', full_name='Data.double_value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='string_or_double', full_name='Data.string_or_double',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=178,
  serialized_end=265,
)

_SENSORREADINGS.fields_by_name['readings'].message_type = _SENSORREADING
_SENSORREADING.fields_by_name['data'].message_type = _DATA
_DATA.oneofs_by_name['string_or_double'].fields.append(
  _DATA.fields_by_name['string_value'])
_DATA.fields_by_name['string_value'].containing_oneof = _DATA.oneofs_by_name['string_or_double']
_DATA.oneofs_by_name['string_or_double'].fields.append(
  _DATA.fields_by_name['double_value'])
_DATA.fields_by_name['double_value'].containing_oneof = _DATA.oneofs_by_name['string_or_double']
DESCRIPTOR.message_types_by_name['SensorReadings'] = _SENSORREADINGS
DESCRIPTOR.message_types_by_name['SensorReading'] = _SENSORREADING
DESCRIPTOR.message_types_by_name['Data'] = _DATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SensorReadings = _reflection.GeneratedProtocolMessageType('SensorReadings', (_message.Message,), dict(
  DESCRIPTOR = _SENSORREADINGS,
  __module__ = 'sensordata_pb2'
  # @@protoc_insertion_point(class_scope:SensorReadings)
  ))
_sym_db.RegisterMessage(SensorReadings)

SensorReading = _reflection.GeneratedProtocolMessageType('SensorReading', (_message.Message,), dict(
  DESCRIPTOR = _SENSORREADING,
  __module__ = 'sensordata_pb2'
  # @@protoc_insertion_point(class_scope:SensorReading)
  ))
_sym_db.RegisterMessage(SensorReading)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
  DESCRIPTOR = _DATA,
  __module__ = 'sensordata_pb2'
  # @@protoc_insertion_point(class_scope:Data)
  ))
_sym_db.RegisterMessage(Data)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\004main'))
# @@protoc_insertion_point(module_scope)
