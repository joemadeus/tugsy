// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sensordata.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	sensordata.proto

It has these top-level messages:
	SensorReadings
	SensorReading
	Data
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SensorReadings struct {
	Readings []*SensorReading `protobuf:"bytes,1,rep,name=readings" json:"readings,omitempty"`
}

func (m *SensorReadings) Reset()                    { *m = SensorReadings{} }
func (m *SensorReadings) String() string            { return proto.CompactTextString(m) }
func (*SensorReadings) ProtoMessage()               {}
func (*SensorReadings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SensorReadings) GetReadings() []*SensorReading {
	if m != nil {
		return m.Readings
	}
	return nil
}

type SensorReading struct {
	Name     string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Location string  `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Recorded int64   `protobuf:"varint,3,opt,name=recorded" json:"recorded,omitempty"`
	Received int64   `protobuf:"varint,4,opt,name=received" json:"received,omitempty"`
	Data     []*Data `protobuf:"bytes,5,rep,name=data" json:"data,omitempty"`
}

func (m *SensorReading) Reset()                    { *m = SensorReading{} }
func (m *SensorReading) String() string            { return proto.CompactTextString(m) }
func (*SensorReading) ProtoMessage()               {}
func (*SensorReading) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SensorReading) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SensorReading) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *SensorReading) GetRecorded() int64 {
	if m != nil {
		return m.Recorded
	}
	return 0
}

func (m *SensorReading) GetReceived() int64 {
	if m != nil {
		return m.Received
	}
	return 0
}

func (m *SensorReading) GetData() []*Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Data struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Types that are valid to be assigned to StringOrDouble:
	//	*Data_StringValue
	//	*Data_DoubleValue
	StringOrDouble isData_StringOrDouble `protobuf_oneof:"string_or_double"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isData_StringOrDouble interface {
	isData_StringOrDouble()
}

type Data_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,oneof"`
}
type Data_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}

func (*Data_StringValue) isData_StringOrDouble() {}
func (*Data_DoubleValue) isData_StringOrDouble() {}

func (m *Data) GetStringOrDouble() isData_StringOrDouble {
	if m != nil {
		return m.StringOrDouble
	}
	return nil
}

func (m *Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Data) GetStringValue() string {
	if x, ok := m.GetStringOrDouble().(*Data_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Data) GetDoubleValue() float64 {
	if x, ok := m.GetStringOrDouble().(*Data_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Data) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Data_OneofMarshaler, _Data_OneofUnmarshaler, _Data_OneofSizer, []interface{}{
		(*Data_StringValue)(nil),
		(*Data_DoubleValue)(nil),
	}
}

func _Data_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Data)
	// string_or_double
	switch x := m.StringOrDouble.(type) {
	case *Data_StringValue:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Data_DoubleValue:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case nil:
	default:
		return fmt.Errorf("Data.StringOrDouble has unexpected type %T", x)
	}
	return nil
}

func _Data_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Data)
	switch tag {
	case 2: // string_or_double.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.StringOrDouble = &Data_StringValue{x}
		return true, err
	case 3: // string_or_double.double_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.StringOrDouble = &Data_DoubleValue{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Data_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Data)
	// string_or_double
	switch x := m.StringOrDouble.(type) {
	case *Data_StringValue:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Data_DoubleValue:
		n += proto.SizeVarint(3<<3 | proto.WireFixed64)
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*SensorReadings)(nil), "SensorReadings")
	proto.RegisterType((*SensorReading)(nil), "SensorReading")
	proto.RegisterType((*Data)(nil), "Data")
}

func init() { proto.RegisterFile("sensordata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x31, 0x71, 0xab, 0x72, 0x85, 0x2a, 0xf2, 0x64, 0x98, 0xa2, 0xb0, 0x44, 0x0c, 0x19,
	0x60, 0x65, 0xaa, 0x18, 0x98, 0x8d, 0xc4, 0xc0, 0x52, 0x5d, 0xeb, 0x53, 0x65, 0x91, 0xda, 0xc8,
	0x71, 0x23, 0xf1, 0x37, 0xf8, 0xc5, 0xc8, 0x8e, 0x65, 0xa9, 0xdb, 0xbd, 0xef, 0x7b, 0x8a, 0x5e,
	0x0c, 0xf5, 0x48, 0x76, 0x74, 0x5e, 0x63, 0xc0, 0xfe, 0xc7, 0xbb, 0xe0, 0xda, 0x57, 0xd8, 0x7c,
	0x24, 0xa6, 0x08, 0xb5, 0xb1, 0xc7, 0x51, 0x3c, 0xc1, 0xca, 0xe7, 0x5b, 0xb2, 0xa6, 0xea, 0xd6,
	0xcf, 0x9b, 0xfe, 0xa2, 0xa2, 0x8a, 0x6f, 0xff, 0x18, 0xdc, 0x5d, 0x38, 0x21, 0x80, 0x5b, 0x3c,
	0x91, 0x64, 0x0d, 0xeb, 0x6e, 0x54, 0xba, 0xc5, 0x03, 0xac, 0x06, 0x77, 0xc0, 0x60, 0x9c, 0x95,
	0xd7, 0x89, 0x97, 0x1c, 0x9d, 0xa7, 0x83, 0xf3, 0x9a, 0xb4, 0xac, 0x1a, 0xd6, 0x55, 0xaa, 0xe4,
	0xec, 0xc8, 0x4c, 0xa4, 0x25, 0x2f, 0x2e, 0x65, 0x71, 0x0f, 0x3c, 0xfe, 0x85, 0x5c, 0xa4, 0x85,
	0x8b, 0xfe, 0x0d, 0x03, 0xaa, 0x84, 0xda, 0x09, 0x78, 0x4c, 0xa2, 0x86, 0xea, 0x9b, 0x7e, 0xf3,
	0x92, 0x78, 0x8a, 0x47, 0xb8, 0x1d, 0x83, 0x37, 0xf6, 0xb8, 0x9b, 0x70, 0x38, 0xd3, 0x3c, 0xe6,
	0xfd, 0x4a, 0xad, 0x67, 0xfa, 0x19, 0x61, 0x2c, 0x69, 0x77, 0xde, 0x0f, 0x94, 0x4b, 0x71, 0x15,
	0x8b, 0xa5, 0x99, 0xa6, 0xd2, 0x56, 0x40, 0x9d, 0xbf, 0xe4, 0xfc, 0x6e, 0x16, 0xdb, 0xe5, 0x17,
	0x3f, 0xa1, 0xb1, 0xfb, 0x65, 0x7a, 0xd9, 0x97, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2d, 0xc1,
	0xd3, 0x24, 0x6d, 0x01, 0x00, 0x00,
}
